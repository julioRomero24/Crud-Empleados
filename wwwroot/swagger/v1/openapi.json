{
  "openapi": "3.0.4",
  "info": {
    "title": "API de Registro y Gestión de Empleados",
    "description": "Esta API permite gestionar empleados mediante operaciones CRUD (Crear, Leer, Actualizar y Eliminar). Se ha desarrollado utilizando ASP.NET Core, implementando el patrón de diseño Inyección de Dependencias (DI) para acceder a la base de datos de manera eficiente.\n\n Se utiliza Entity Framework Core, un ORM (Object-Relational Mapper) que facilita la interacción con la base de datos a través de entidades y consultas LINQ. Además, AutoMapper se emplea para transformar las entidades del modelo en DTOs (Data Transfer Objects), lo que mejora la separación de capas y la seguridad al exponer solo los datos necesarios en las respuestas de la API.\n \n La inyección de dependencias se usa para proporcionar el DbContext a los servicios y controladores, lo que mejora la modularidad y facilita la reutilización del código. Esto también permite realizar pruebas más fácilmente, ya que se puede sustituir el DbContext por una base de datos en memoria para pruebas unitarias.",
    "version": "1.0"
  },
  "paths": {
    "/api/Empleados": {
      "get": {
        "tags": [
          "Empleados"
        ],
        "summary": "Retorna todos los empleados.",
        "description": "Retorna los datos de todos los empleados.",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmpleadoDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmpleadoDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmpleadoDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Empleados"
        ],
        "summary": "Registra un nuevo empleado.",
        "description": "Retorna los datos del empleado creado. la columnas 'tipoDoc' solo acepta el valor de 1 y 'area'  acepta (1-3)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CrearEmpleadoDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrearEmpleadoDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CrearEmpleadoDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CrearEmpleadoDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmpleadoDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmpleadoDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmpleadoDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/Empleados/{id}": {
      "get": {
        "tags": [
          "Empleados"
        ],
        "summary": "obtener empleado por id.",
        "description": "busca por id al empleado y retorna sus datos.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmpleadoDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmpleadoDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmpleadoDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Empleados"
        ],
        "summary": "Elimina empleado por id.",
        "description": "Busca empleado por id, cuando lo encuentra lo elimina y retorna su información.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmpleadoDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmpleadoDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmpleadoDTO"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Empleados"
        ],
        "summary": "Editar datos de usuario.",
        "description": "Se busca al empleado por ID; si se encuentra, se actualizan los datos proporcionados en el cuerpo de la solicitud.\n\n**Ejemplo de cuerpo de la solicitud:**\n\n```json\n[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/nombre\",\n    \"value\": \"karla\"\n  },\n  {\n    \"op\": \"replace\",\n    \"path\": \"/apellido\",\n    \"value\": \"Giraldo\"\n  }\n]\n```",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmpleadoDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmpleadoDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmpleadoDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Empleados"
        ],
        "summary": "Edita todos los datos de un usuario.",
        "description": "busca usuario por id y se cambian todos los datos por los que se pongan en el body. la columnas 'tipoDoc' solo acepta el valor de 1 y 'area'  acepta (1-3)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EmpleadoDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmpleadoDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmpleadoDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmpleadoDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmpleadoDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmpleadoDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmpleadoDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/Empleados/exists/{id}": {
      "get": {
        "tags": [
          "Empleados"
        ],
        "summary": "Retorna True si empleado existe.",
        "description": "Busca empleados por id y si lo encuentra retorna Tue.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CrearEmpleadoDTO": {
        "type": "object",
        "properties": {
          "documento": {
            "type": "string",
            "nullable": true
          },
          "tipoDoc": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "nullable": true
          },
          "apellido": {
            "type": "string",
            "nullable": true
          },
          "titulo": {
            "type": "string",
            "nullable": true
          },
          "salarioBasico": {
            "type": "number",
            "format": "double"
          },
          "salarioHora": {
            "type": "number",
            "format": "double"
          },
          "area": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EmpleadoDTO": {
        "type": "object",
        "properties": {
         
          "documento": {
            "type": "string",
            "nullable": true
          },
          "tipoDoc": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "nullable": true
          },
          "apellido": {
            "type": "string",
            "nullable": true
          },
          "titulo": {
            "type": "string",
            "nullable": true
          },
          "salarioBasico": {
            "type": "number",
            "format": "double"
          },
          "salarioHora": {
            "type": "number",
            "format": "double"
          },
          "area": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Operation": {
        "type": "object",
        "properties": {
          
          "op": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      }
     
    }
  }
}